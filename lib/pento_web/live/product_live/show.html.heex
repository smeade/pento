<h1>Show Product</h1>

<h4>It's <%= time() %></h4>

<h3><%= @message %></h3>

<!-- TRACE_6: on :show, @live_action != :edit    -->
<!--          so live_modal is not rendered      -->

<!-- TRACE_9: now that @live_action == :edit     -->
<!--          the live_modal component is called -->
<!--          to render the product edit form    -->
<%= if @live_action in [:edit] do %>
  <%= live_modal PentoWeb.ProductLive.FormComponent,
    id: @product.id,
    title: @page_title,
    action: @live_action,
    product: @product,
    return_to: Routes.product_show_path(@socket, :show, @product) %>
<% end %>

<ul>

  <li>
    <strong>Name:</strong>
    <%= @product.name %>
  </li>

  <li>
    <strong>Description:</strong>
    <%= @product.description %>
  </li>

  <li>
    <strong>Unit price:</strong>
    <%= @product.unit_price %>
  </li>

  <li>
    <strong>Sku:</strong>
    <%= @product.sku %>
  </li>

</ul>

<!-- TRACE_6: ProductLive.Show template renders the Product Edit form when @live_action == :edit -->
<!--          So this link sets live_action :edit. -->
<span><%= live_patch "Edit", to: Routes.product_show_path(@socket, :edit, @product), class: "button" %></span> |
<span><%= live_redirect "Back", to: Routes.product_index_path(@socket, :index) %></span>
